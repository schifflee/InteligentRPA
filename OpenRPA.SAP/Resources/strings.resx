<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="activity_getelement" xml:space="preserve">
    <value>Get Element</value>
  </data>
  <data name="activity_getelement_drop_hint" xml:space="preserve">
    <value>Drop activity</value>
  </data>
  <data name="activity_getelement_highlight" xml:space="preserve">
    <value>Highlight</value>
  </data>
  <data name="activity_getelement_open_selector" xml:space="preserve">
    <value>Open Selector</value>
  </data>
  <data name="activity_getelement_tooltip" xml:space="preserve">
    <value>Find an SAP element based on selector</value>
  </data>
  <data name="activity_getproperty" xml:space="preserve">
    <value>Get Property</value>
  </data>
  <data name="activity_getproperty_actionname" xml:space="preserve">
    <value>Property Name</value>
  </data>
  <data name="activity_getproperty_actionname_help" xml:space="preserve">
    <value>Name of property to Get</value>
  </data>
  <data name="activity_getproperty_path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="activity_getproperty_path_help" xml:space="preserve">
    <value>Path to object</value>
  </data>
  <data name="activity_getproperty_result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="activity_getproperty_result_help" xml:space="preserve">
    <value>The result from getting the Property</value>
  </data>
  <data name="activity_getproperty_systemname" xml:space="preserve">
    <value>System Name</value>
  </data>
  <data name="activity_getproperty_systemname_help" xml:space="preserve">
    <value>System Name to send command to</value>
  </data>
  <data name="activity_getproperty_tooltip" xml:space="preserve">
    <value>Get SAP UI Element property value</value>
  </data>
  <data name="activity_invokemethod" xml:space="preserve">
    <value>Invoke Method</value>
  </data>
  <data name="activity_invokemethod_actionname" xml:space="preserve">
    <value>Action Name</value>
  </data>
  <data name="activity_invokemethod_actionname_help" xml:space="preserve">
    <value>Action to perform on object</value>
  </data>
  <data name="activity_invokemethod_parameters" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="activity_invokemethod_parameters_help" xml:space="preserve">
    <value>Patameters for Action</value>
  </data>
  <data name="activity_invokemethod_path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="activity_invokemethod_path_help" xml:space="preserve">
    <value>Path to object</value>
  </data>
  <data name="activity_invokemethod_result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="activity_invokemethod_result_help" xml:space="preserve">
    <value>The return value from Invoke Method if it has one</value>
  </data>
  <data name="activity_invokemethod_systemname" xml:space="preserve">
    <value>System Name</value>
  </data>
  <data name="activity_invokemethod_systemname_help" xml:space="preserve">
    <value>System Name to send command to</value>
  </data>
  <data name="activity_invokemethod_tooltip" xml:space="preserve">
    <value>Invoke SAP UI Method</value>
  </data>
  <data name="activity_login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="activity_login_client" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="activity_login_client_help" xml:space="preserve">
    <value>SAP Client to use</value>
  </data>
  <data name="activity_login_host" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="activity_login_host_help" xml:space="preserve">
    <value>Server IP or hostname</value>
  </data>
  <data name="activity_login_language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="activity_login_language_help" xml:space="preserve">
    <value>Set Language of client</value>
  </data>
  <data name="activity_login_password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="activity_login_password_help" xml:space="preserve">
    <value>Password for user to login with</value>
  </data>
  <data name="activity_login_systemname" xml:space="preserve">
    <value>System Name</value>
  </data>
  <data name="activity_login_systemname_help" xml:space="preserve">
    <value>Expected System Name, will search for a session to this system, and only login if non is found. Leave empty to always login to a new session</value>
  </data>
  <data name="activity_login_tooltip" xml:space="preserve">
    <value>Login to sap using the credentials, unless a session with the given name exists</value>
  </data>
  <data name="activity_login_username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="activity_login_username_help" xml:space="preserve">
    <value>Username to login with</value>
  </data>
  <data name="activity_map_variables" xml:space="preserve">
    <value>Map variables</value>
  </data>
  <data name="activity_setproperty" xml:space="preserve">
    <value>Set Property</value>
  </data>
  <data name="activity_setproperty_actionname" xml:space="preserve">
    <value>Property Name</value>
  </data>
  <data name="activity_setproperty_actionname_help" xml:space="preserve">
    <value>Name of property to Set</value>
  </data>
  <data name="activity_setproperty_parameters" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="activity_setproperty_parameters_help" xml:space="preserve">
    <value>Patameters for Action</value>
  </data>
  <data name="activity_setproperty_path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="activity_setproperty_path_help" xml:space="preserve">
    <value>Path to object</value>
  </data>
  <data name="activity_setproperty_systemname" xml:space="preserve">
    <value>System Name</value>
  </data>
  <data name="activity_setproperty_systemname_help" xml:space="preserve">
    <value>System Name to send command to</value>
  </data>
  <data name="activity_setproperty_tooltip" xml:space="preserve">
    <value>Set the property value of an SAP UI Element</value>
  </data>
  <data name="plugin_auto_launch_sap_bridge" xml:space="preserve">
    <value>Auto launch</value>
  </data>
  <data name="plugin_auto_launch_sap_bridge_help" xml:space="preserve">
    <value>Auto launch SAP bridge when robot is running</value>
  </data>
  <data name="plugin_bridge_timeout_seconds" xml:space="preserve">
    <value>Bridge Timeout</value>
  </data>
  <data name="plugin_bridge_timeout_seconds_help" xml:space="preserve">
    <value>How long to wait per request to SAP bridge</value>
  </data>
  <data name="plugin_launch_sap_bridge" xml:space="preserve">
    <value>Launch SAP bridge</value>
  </data>
  <data name="plugin_record_with_get_element" xml:space="preserve">
    <value>Record Get Element</value>
  </data>
  <data name="plugin_record_with_get_element_help" xml:space="preserve">
    <value>When recording use GetElement instead of SetProperty</value>
  </data>
</root>
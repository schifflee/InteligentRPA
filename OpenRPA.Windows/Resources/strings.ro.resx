<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="detector_button_highlight" xml:space="preserve">
    <value>Scoate în evidență</value>
  </data>
	<data name="detector_button_open_selector" xml:space="preserve">
    <value>Deschide selectorul</value>
  </data>
	<data name="detector_button_select" xml:space="preserve">
    <value>Selectează</value>
  </data>
	<data name="detector_name" xml:space="preserve">
    <value>Nume</value>
  </data>
	<data name="detector_selector" xml:space="preserve">
    <value>Selectorul</value>
  </data>
	<data name="enable_cache_help" xml:space="preserve">
    <value>Permite introducerea în cache a elementelor pentru o automatizare mai rapidă în detrimentul RAM-ului</value>
  </data>
	<data name="getelement_drop_hint" xml:space="preserve">
    <value>Abandonează activitatea</value>
  </data>
	<data name="getelement_highlight" xml:space="preserve">
    <value>Scoate în evidență</value>
  </data>
	<data name="getelement_open_selector" xml:space="preserve">
    <value>Deschide selectorul</value>
  </data>
	<data name="plugin_allow_child_searching" xml:space="preserve">
    <value>Permiteți căutarea precedentă</value>
  </data>
	<data name="plugin_allow_child_searching_help" xml:space="preserve">
    <value>Dacă un element dintr-un selector nu este găsit, căutați automat toți copiii pentru potrivire</value>
  </data>
	<data name="plugin_allow_multiple_hits" xml:space="preserve">
    <value>Permiteți mai multe accesări</value>
  </data>
	<data name="plugin_allow_multiple_hits_help" xml:space="preserve">
    <value>Permiteți unui selector de elemente dintr-un selector să găsească mai mulți copii</value>
  </data>
	<data name="plugin_enable_cache" xml:space="preserve">
    <value>Activați stocarea în cache</value>
  </data>
	<data name="plugin_enum_properties" xml:space="preserve">
    <value>Enumerează proprietățile</value>
  </data>
	<data name="plugin_enum_properties_help" xml:space="preserve">
    <value>Testați fiecare element de selectare pentru cantitatea minimă necesară de proprietăți</value>
  </data>
	<data name="plugin_get_elements_in_different_thread" xml:space="preserve">
    <value>Obțineți elemente în diferite thread-uri</value>
  </data>
	<data name="plugin_get_elements_in_different_thread_help" xml:space="preserve">
    <value>GetElement folosește un alt thread în timpul căutării, pentru a evita blocarea dacă selectorul găsește un robot</value>
  </data>
	<data name="plugin_search_descendants" xml:space="preserve">
    <value>Căutați descendenți</value>
  </data>
	<data name="plugin_search_descendants_help" xml:space="preserve">
    <value>Căutați pe toți descendenții, utilizați pentru mai mulți selectori simpli, dar este mai lent</value>
  </data>
	<data name="plugin_traverse_selector_both_ways" xml:space="preserve">
    <value>Traversează selectorul în ambele sensuri</value>
  </data>
	<data name="plugin_traverse_selector_both_ways_help" xml:space="preserve">
    <value>Traversează copacul UI în ambele modalități pentru a filtra elementele de selectare.</value>
  </data>
	<data name="activity_getelement" xml:space="preserve">
		<value>Obține element</value>
	</data>
	<data name="activity_getelement_tooltip" xml:space="preserve">
		<value>Găsiți un element Windows UI bazat pe selector</value>
	</data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="activity_auth_hint" xml:space="preserve">
		<value>Nombre de usuario o correo electrónico</value>
	</data>
	<data name="activity_auth_username" xml:space="preserve">
		<value>Nombre de usuario</value>
	</data>
	<data name="activity_exportfile_file" xml:space="preserve">
		<value>FileURL</value>
	</data>
	<data name="activity_exportfile_file_hint" xml:space="preserve">
		<value>URL al archivo para obtener datos de</value>
	</data>
	<data name="activity_exportfile_key" xml:space="preserve">
		<value>Llave</value>
	</data>
	<data name="activity_exportfile_key_hint" xml:space="preserve">
		<value>Clave API de la actividad de autenticación</value>
	</data>
	<data name="activity_exportfile_queue" xml:space="preserve">
		<value>Cola</value>
	</data>
	<data name="activity_exportfile_queue_hint" xml:space="preserve">
		<value>Cola para exportar datos desde</value>
	</data>
	<data name="activity_getqueues_key" xml:space="preserve">
		<value>Llave</value>
	</data>
	<data name="activity_getqueues_key_hint" xml:space="preserve">
		<value>Clave API de la actividad de autenticación</value>
	</data>
	<data name="activity_getstatus_file" xml:space="preserve">
		<value>FileURL</value>
	</data>
	<data name="activity_getstatus_file_hint" xml:space="preserve">
		<value>URL al archivo para obtener el estado de</value>
	</data>
	<data name="activity_getstatus_key" xml:space="preserve">
		<value>Llave</value>
	</data>
	<data name="activity_getstatus_key_hint" xml:space="preserve">
		<value>Clave API de la actividad de autenticación</value>
	</data>
	<data name="activity_uploadfile_filename" xml:space="preserve">
		<value>Nombre del archivo</value>
	</data>
	<data name="activity_uploadfile_filename_hint" xml:space="preserve">
		<value>Archivo para cargar a la cola</value>
	</data>
	<data name="activity_uploadfile_key" xml:space="preserve">
		<value>Llave</value>
	</data>
	<data name="activity_uploadfile_key_hint" xml:space="preserve">
		<value>Clave API de la actividad de autenticación</value>
	</data>
	<data name="activity_uploadfile_queue" xml:space="preserve">
		<value>Cola</value>
	</data>
	<data name="activity_uploadfile_queue_hint" xml:space="preserve">
		<value>Cola para cargar el archivo a</value>
	</data>
	<data name="activity_waitforfile_file" xml:space="preserve">
		<value>FileURL</value>
	</data>
	<data name="activity_waitforfile_file_hint" xml:space="preserve">
		<value>URL a archivo para esperar</value>
	</data>
	<data name="activity_waitforfile_key" xml:space="preserve">
		<value>Llave</value>
	</data>
	<data name="activity_waitforfile_key_hint" xml:space="preserve">
		<value>Clave API de la actividad de autenticación</value>
	</data>
	<data name="activity_waitforfile_status" xml:space="preserve">
		<value>Estado</value>
	</data>
	<data name="activity_waitforfile_status_hint" xml:space="preserve">
		<value>Estado a esperar</value>
	</data>
	<data name="activity_auth" xml:space="preserve">
		<value>Autenticación</value>
	</data>
	<data name="activity_auth_tooltip" xml:space="preserve">
		<value>Autentíquese contra el servicio Rossum y recupere un token / clave</value>
	</data>
	<data name="activity_exportfiledata" xml:space="preserve">
		<value>Exportar datos de archivo</value>
	</data>
	<data name="activity_exportfiledata_tooltip" xml:space="preserve">
		<value>Obtener la fecha de los datos extraídos de una factura, solo funciona una vez que el estado del archivo está en estado exportado</value>
	</data>
	<data name="activity_getfilestatus" xml:space="preserve">
		<value>Obtener estado del archivo</value>
	</data>
	<data name="activity_getfilestatus_tooltip" xml:space="preserve">
		<value>Obtener el estado de un archivo en cola, puede ser
importación: el AI Core Engine está procesando el documento para la extracción de datos; estado inicial del documento.
fail_import - Falló la importación, p. debido a un archivo de documento mal formado.
to_review: se realiza el paso de extracción inicial y el documento está esperando la validación del usuario.
revisión: el documento se está validando en la interfaz de usuario.
exportar: el documento está validado y ahora está esperando la finalización de la llamada de guardado del conector.
exportado: el documento se valida y pasa todos los ganchos con éxito; Este es el estado terminal típico de un documento.
failure_export: cuando el conector devolvió un error.
pospuesto: el operador ha optado por posponer el documento en lugar de exportarlo.
eliminado: cuando el usuario eliminó el documento.
purgado: solo se conservaron los metadatos después de una eliminación.</value>
	</data>
	<data name="activity_getqueues" xml:space="preserve">
		<value>Obtener colas</value>
	</data>
	<data name="activity_getqueues_tooltip" xml:space="preserve">
		<value>Obtenga una lista de colas de rossum, se debe cargar un archivo a una cola que tenga configuradas varias configuraciones a través del sitio web</value>
	</data>
	<data name="activity_uploadfile" xml:space="preserve">
		<value>Subir archivo</value>
	</data>
	<data name="activity_uploadfile_tooltip" xml:space="preserve">
		<value>Sube un archivo a una cola Rossum</value>
	</data>
	<data name="activity_waitforfilestatus" xml:space="preserve">
		<value>Esperar el estado del archivo</value>
	</data>
	<data name="activity_waitforfilestatus_tooltip" xml:space="preserve">
		<value>Haga que el flujo de trabajo quede inactivo mientras espera que el archivo entre en el estado especificado</value>
	</data>
</root>
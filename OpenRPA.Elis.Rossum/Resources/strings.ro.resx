<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="activity_auth_hint" xml:space="preserve">
    <value>Nume de utilizator sau email</value>
  </data>
	<data name="activity_auth_username" xml:space="preserve">
    <value>Nume de utilizator</value>
  </data>
	<data name="activity_exportfile_file" xml:space="preserve">
    <value>Adresa URL a fișierului</value>
  </data>
	<data name="activity_exportfile_file_hint" xml:space="preserve">
    <value>URL de la fișier pentru a obține date de la</value>
  </data>
	<data name="activity_exportfile_key" xml:space="preserve">
    <value>Cheie</value>
  </data>
	<data name="activity_exportfile_key_hint" xml:space="preserve">
    <value>Cheie API din activitatea de auth</value>
  </data>
	<data name="activity_exportfile_queue" xml:space="preserve">
    <value>Coadă</value>
  </data>
	<data name="activity_exportfile_queue_hint" xml:space="preserve">
    <value>Coada pentru a exporta date din</value>
  </data>
	<data name="activity_getqueues_key" xml:space="preserve">
    <value>Cheie</value>
  </data>
	<data name="activity_getqueues_key_hint" xml:space="preserve">
    <value>Cheie API din activitatea de auth</value>
  </data>
	<data name="activity_getstatus_file" xml:space="preserve">
    <value>Adresa URL a fișierului</value>
  </data>
	<data name="activity_getstatus_file_hint" xml:space="preserve">
    <value>URL de la fișier pentru a obține statutul</value>
  </data>
	<data name="activity_getstatus_key" xml:space="preserve">
    <value>Cheie</value>
  </data>
	<data name="activity_getstatus_key_hint" xml:space="preserve">
    <value>Cheie API din activitatea de auth</value>
  </data>
	<data name="activity_uploadfile_filename" xml:space="preserve">
    <value>Nume de fișier</value>
  </data>
	<data name="activity_uploadfile_filename_hint" xml:space="preserve">
    <value>Fișier de încărcat la coadă</value>
  </data>
	<data name="activity_uploadfile_key" xml:space="preserve">
    <value>Cheie</value>
  </data>
	<data name="activity_uploadfile_key_hint" xml:space="preserve">
    <value>Cheie API din activitatea de auth</value>
  </data>
	<data name="activity_uploadfile_queue" xml:space="preserve">
    <value>Coadă</value>
  </data>
	<data name="activity_uploadfile_queue_hint" xml:space="preserve">
    <value>Coada la care încărcați fișierul</value>
  </data>
	<data name="activity_waitforfile_file" xml:space="preserve">
    <value>Adresa URL a fișierului</value>
  </data>
	<data name="activity_waitforfile_file_hint" xml:space="preserve">
    <value>URL fișier în așteptare</value>
  </data>
	<data name="activity_waitforfile_key" xml:space="preserve">
    <value>Cheie</value>
  </data>
	<data name="activity_waitforfile_key_hint" xml:space="preserve">
    <value>Cheie API din activitatea de auth</value>
  </data>
	<data name="activity_waitforfile_status" xml:space="preserve">
    <value>Stare</value>
  </data>
	<data name="activity_waitforfile_status_hint" xml:space="preserve">
    <value>Stare de așteptat</value>
  </data>
	<data name="activity_auth" xml:space="preserve">
		<value>Auth</value>
	</data>
	<data name="activity_auth_tooltip" xml:space="preserve">
		<value>Autentificați-vă împotriva serviciului Rossum și obțineți înapoi o token / cheie</value>
	</data>
	<data name="activity_exportfiledata" xml:space="preserve">
		<value>Exportul fișierelor de date</value>
	</data>
	<data name="activity_exportfiledata_tooltip" xml:space="preserve">
		<value>Obțineți data extrasă dintr-o factură, funcționează numai după ce starea fișierului este în starea exportată</value>
	</data>
	<data name="activity_getfilestatus" xml:space="preserve">
		<value>Obțineți starea fișierului</value>
	</data>
	<data name="activity_getfilestatus_tooltip" xml:space="preserve">
		<value>Obține starea unui fișier în coadă, poate fi fie
importarea - Documentul este procesat de AI Core Engine pentru extragerea datelor; starea inițială a documentului.
failed_import - Importul eșuat, de ex. din cauza unui fișier document defect.
to_review - Etapa inițială de extracție este făcută și documentul așteaptă validarea utilizatorului.
revizuire - Documentul este în curs de validare în interfața utilizator.
exportare - Documentul este validat și așteaptă acum finalizarea apelului de salvare a conectorului.
exportat - Documentul este validat și trecut cu succes toate cârligele; aceasta este starea terminală tipică a unui document.
failed_export - Când conectorul a returnat o eroare.
amânat - Operatorul a ales să amâne documentul în loc să-l exporte.
șters - când documentul a fost șters de către utilizator.
purjată - numai metadatele au fost păstrate după o ștergere.</value>
	</data>
	<data name="activity_getqueues" xml:space="preserve">
		<value>Obțineți cozi</value>
	</data>
	<data name="activity_getqueues_tooltip" xml:space="preserve">
		<value>Obțineți o listă de cozi din rossum, un fișier trebuie încărcat într-o coadă care are setări variuse setate deși site-ul web</value>
	</data>
	<data name="activity_uploadfile" xml:space="preserve">
		<value>Incarca fisier</value>
	</data>
	<data name="activity_uploadfile_tooltip" xml:space="preserve">
		<value>Încarcă un fișier într-o coadă Rossum</value>
	</data>
	<data name="activity_waitforfilestatus" xml:space="preserve">
		<value>Așteptați starea fișierului</value>
	</data>
	<data name="activity_waitforfilestatus_tooltip" xml:space="preserve">
		<value>Faceți ca fluxul de lucru să meargă inactiv în așteptarea ca fișierul să intre în starea specificată</value>
	</data>
</root>
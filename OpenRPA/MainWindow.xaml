<Window x:Class="OpenRPA.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OpenRPA"
        xmlns:or="clr-namespace:OpenRPA.Resources"
        xmlns:ribbon="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:input="clr-namespace:System.Windows.Controls;assembly=DotNetProjects.Input.Toolkit"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:dockctrl="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock" xmlns:views="clr-namespace:OpenRPA.Views"
        mc:Ignorable="d"
        Loaded="Window_Loaded" Closed="Window_Closed" Closing="Window_Closing" StateChanged="Window_StateChanged" PreviewMouseWheel="SearchBox_PreviewMouseWheel"
        KeyDown="Window_KeyDown" Name="TheMainWindow"
        Title="InteligentRPA"
        x:Uid="title"
         Height="750" Width="1200">

    <Window.Resources>
        <local:BindingProxy x:Key="proxy" Data="{Binding}" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition  Height="120" />
            <RowDefinition />
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Ribbon DockPanel.Dock="Top" Margin="0,-22,0,0" Grid.Row="0" PreviewMouseWheel="SearchBox_PreviewMouseWheel" x:Name="MainRibbon">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu SmallImageSource="/OpenRPA;component/Resources/Buttons/Export.png">
                    <RibbonApplicationMenuItem Header="{x:Static or:strings.settingsfile}" ImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                               Command="{Binding Data.SettingsCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonApplicationMenuItem Header="{x:Static or:strings.signout}" ImageSource="/OpenRPA;component/Resources/Buttons/Revert.png" 
                                               Command="{Binding Data.SignoutCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonApplicationMenuItem Header="{x:Static or:strings.exitapplication}" ImageSource="/OpenRPA;component/Resources/Buttons/Signout.png" 
                                               Command="{Binding Data.ExitAppCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />


                    <RibbonApplicationMenu.AuxiliaryPaneContent>
                        <RibbonGallery ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <RibbonGalleryCategory MaxColumnCount="1">
                                <RibbonGalleryItem x:Name="GalleryItem1" Content="Application menu content" 
                                MouseOverBackground="Transparent"
                                MouseOverBorderBrush="Transparent"
                                CheckedBackground="Transparent"
                                CheckedBorderBrush="Transparent"
                                               />
                                <RibbonGalleryItem>
                                    <Hyperlink x:Name="linkOpenFlow" Command="{Binding Data.LinkOpenFlowCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" >
                                        <TextBlock Text="{x:Static or:strings.openflow}" />
                                    </Hyperlink>
                                </RibbonGalleryItem>
                                <RibbonGalleryItem>
                                    <Hyperlink x:Name="linkNodeRED" Command="{Binding Data.LinkNodeREDCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" >
                                        <TextBlock Text="{x:Static or:strings.nodered}" />
                                    </Hyperlink>
                                </RibbonGalleryItem>
                                <RibbonGalleryItem>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{x:Static or:strings.version}" />
                                        <TextBlock Text=" " />
                                        <TextBlock x:Name="lblVersion" />
                                    </StackPanel>
                                </RibbonGalleryItem>
                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonApplicationMenu.AuxiliaryPaneContent>


                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab 
                xmlns:local="clr-namespace:OpenRPA"  Header="{x:Static or:strings.general}" x:Name="tabGeneral"
               
                >
                <RibbonGroup Header="{x:Static or:strings.files}" PreviewMouseWheel="SearchBox_PreviewMouseWheel">
                    <RibbonMenuButton x:Name="ButtonNew" Label="{x:Static or:strings.mainnew}" LargeImageSource="/OpenRPA;component/Resources/Buttons/New.png">
                        <RibbonMenuItem Header="{x:Static or:strings.newworkflow}"
                                Command="{Binding Data.NewWorkflowCommand, Source={StaticResource proxy}}" 
                                CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" KeyTip="N" />
                        <RibbonMenuItem Header="{x:Static or:strings.newproject}"
                                Command="{Binding Data.NewProjectCommand, Source={StaticResource proxy}}" 
                                CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    </RibbonMenuButton>

                    <RibbonButton Label="{x:Static or:strings.save}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Save.png" 
                                  Command="{Binding Data.SaveCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" KeyTip="S" />
                    <RibbonButton Label="{x:Static or:strings.open}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                  Command="{Binding Data.OpenCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonButton Label="{x:Static or:strings.copy}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Copy.png" 
                                  Command="{Binding Data.CopyCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="{x:Static or:strings.delete}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Delete.png" 
                                  Command="{Binding Data.DeleteCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="{x:Static or:strings.permissions}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Manage.png" 
                                  Command="{Binding Data.PermissionsCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="{x:Static or:strings.main_reload}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Revert.png" 
                                  Command="{Binding Data.ReloadCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="{x:Static or:strings.import}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Import.png" 
                                  Command="{Binding Data.ImportCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="{x:Static or:strings.export}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Export.png" 
                                  Command="{Binding Data.ExportCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                </RibbonGroup>
                <RibbonGroup Header="{x:Static or:strings.runtime}">
                    <RibbonButton Label="{x:Static or:strings.play}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Play.png" 
                                  Command="{Binding Data.PlayCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}"/>
                    <RibbonButton Label="{x:Static or:strings.stop}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Stop.png" 
                                  Command="{Binding Data.StopCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="{x:Static or:strings.record}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Record.png"
                                  Command="{Binding Data.RecordCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding VisualTracking}" Command="{Binding Data.VisualTrackingCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.visualtracking}"></TextBlock>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding SlowMotion}" Command="{Binding Data.SlowMotionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"  />
                        <TextBlock Text="{x:Static or:strings.slowmotion}"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Minimize}" Command="{Binding Data.MinimizeCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"  />
                        <TextBlock Text="{x:Static or:strings.minimize}"></TextBlock>
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="{x:Static or:strings.ribbon_search}">
                    <input:AutoCompleteBox Width="80"
                                           x:Name="SearchBox" 
                                           FilterMode="None"
                                           IsTextCompletionEnabled="False"
                                           Placeholder="{x:Static or:strings.ribbon_search}"
                                           SelectionChanged="SearchBox_SelectionChanged"
                                           Populating="SearchBox_Populating"
                                           MinimumPopulateDelay="200"
                                           ValueMemberPath="name"
                                           PreviewLostKeyboardFocus="SearchBox_PreviewLostKeyboardFocus"
                                           KeyUp="SearchBox_KeyUp"
            >
                        <input:AutoCompleteBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16" Height="16" Source="{Binding ImageSource, Mode=OneWay}" />
                                    <TextBlock Margin="5,0,0,0" Text="{Binding Text, Mode=OneWay}" VerticalAlignment="Center" />
                                    <TextBlock FontWeight="Bold" Margin="5,0,0,0"  Text="{Binding Header, Mode=OneWay}" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </input:AutoCompleteBox.ItemTemplate>
                    </input:AutoCompleteBox>
                </RibbonGroup>    
            </RibbonTab>
            <RibbonTab Header="{x:Static or:strings.settings}">
                <RibbonGroup Header="{x:Static or:strings.cancelkey}">
                    <StackPanel>
                        <TextBox x:Name="cancelkey" GotKeyboardFocus="Cancelkey_GotKeyboardFocus" Width="80" Height="25" />
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="{x:Static or:strings.tesseract}">
                    <StackPanel>
                        <ribbon:RibbonComboBox>
                            <ribbon:RibbonGallery SelectedItem="{Binding Path=defaultocrlangs}">
                                <ribbon:RibbonGalleryCategory ItemsSource="{Binding OCRlangs}" />
                            </ribbon:RibbonGallery>
                        </ribbon:RibbonComboBox>
                        <RibbonButton Content="{x:Static or:strings.download}" Click="TesseractLang_Click"></RibbonButton>
                    </StackPanel>

                </RibbonGroup>
                <RibbonGroup Header="{x:Static or:strings.uilanguage}">
                    <StackPanel>
                        <ribbon:RibbonComboBox>
                            <ribbon:RibbonGallery SelectedItem="{Binding Path=defaultuilocal}" SelectedValuePath="Value" >
                                <ribbon:RibbonGalleryCategory ItemsSource="{Binding uilocals}" DisplayMemberPath="Name"  />
                            </ribbon:RibbonGallery>
                        </ribbon:RibbonComboBox>
                    </StackPanel>

                </RibbonGroup>
                <RibbonGroup Header="{x:Static or:strings.browseraddons}">
                    <RibbonButton Label="{x:Static or:strings.chrome}" LargeImageSource="/OpenRPA;component/Resources/Buttons/OpenChrome.png" 
                                  Command="{Binding Data.OpenChromePageCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonButton Label="{x:Static or:strings.firefox}" LargeImageSource="/OpenRPA;component/Resources/Buttons/OpenFirefox.png" 
                                  Command="{Binding Data.OpenFirefoxPageCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonButton Label="{x:Static or:strings.edge}" LargeImageSource="/OpenRPA;component/Resources/Buttons/edge.png" 
                                  Command="{Binding Data.OpenEdgePageCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />

                </RibbonGroup>
                <RibbonGroup Header="{x:Static or:strings.plugins}">
                    <RibbonButton Label="{x:Static or:strings.detectors}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                  Command="{Binding Data.DetectorsCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonButton Label="{x:Static or:strings.runplugins}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                  Command="{Binding Data.RunPluginsCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonButton Label="{x:Static or:strings.recorderplugins}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                  Command="{Binding Data.RecorderPluginsCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                </RibbonGroup>
                <RibbonGroup Header="{x:Static or:strings.packages}">
                    <RibbonButton Label="{x:Static or:strings.packages}" LargeImageSource="/OpenRPA;component/Resources/Buttons/Package.png" 
                                  Command="{Binding Data.ManagePackagesCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                </RibbonGroup>
                <RibbonGroup Header="{x:Static or:strings.runtime}">
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_record_overlay}" Command="{Binding Data.VisualTrackingCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.recordingoverlay}"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_use_sendkeys}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.usesendkeys}"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_use_virtual_click}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.usevirtualclicks}"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_use_animate_mouse}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.animatemouse}"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_recording_add_to_designer}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.main_settings_recording_add_to_designer}"></TextBlock>
                    </StackPanel>
                    <!--<StackPanel Orientation="Horizontal">
                        <RibbonTextBox Text="{Binding Setting_use_postwait}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}"  />
                        <TextBlock Text="{x:Static or:strings.clickpostwait}"></TextBlock>
                    </StackPanel>-->
                </RibbonGroup>
                <RibbonGroup Header="{x:Static or:strings.logging}">
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_log_warning}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.warning}"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_log_debug}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.debug}"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_log_verbose}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.verbose}"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_log_selector}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.selector}"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Setting_log_selector_verbose}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="{x:Static or:strings.selectorverbose}"></TextBlock>
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>
            <!--<RibbonTab Header="Windows">
                <RibbonGroup Header="Windows">
                    <StackPanel>
                        <ribbon:RibbonCheckBox Label="Toolbox" IsChecked="{Binding ElementName=Toolbox, Path=IsHidden}"></ribbon:RibbonCheckBox>
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>-->
            <RibbonTab Header="{x:Static or:strings.tools}">
                <RibbonGroup Header="{x:Static or:strings.tools_change_type}">
                    <RibbonButton Label="{x:Static or:strings.tools_swap_sendkeys}" LargeImageSource="/OpenRPA;component/Resources/Buttons/switch_216215.png" 
                                  Command="{Binding Data.SwapSendKeysCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="{x:Static or:strings.tools_swap_virtualclick}" LargeImageSource="/OpenRPA;component/Resources/Buttons/switch_216215.png" 
                                  Command="{Binding Data.SwapVirtualClickCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="{x:Static or:strings.tools_swap_animate}" LargeImageSource="/OpenRPA;component/Resources/Buttons/switch_216215.png" 
                                  Command="{Binding Data.SwapAnimateCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>


        <avalonDock:DockingManager Grid.Row="1" x:Name="DManager" ActiveContentChanged="DManager_ActiveContentChanged">
            <avalonDock:DockingManager.Theme>
                <!--<avalonDock:AeroTheme/>-->
                <avalonDock:VS2010Theme/>
                <!--<avalonDock:ExpressionDarkTheme/>-->
                <!--<avalonDock:ExpressionLightTheme/>-->
                <!--<avalonDock:GenericTheme/>-->
                <!--<avalonDock:MetroTheme/>-->
            </avalonDock:DockingManager.Theme>
            <avalonDock:DockingManager.LayoutItemContainerStyle>
                <Style TargetType="{x:Type dockctrl:LayoutItem}" >
                    <Setter Property="Title" Value="{Binding Model.Title}" />
                    <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                    <Setter Property="CanClose"  Value="{Binding Model.CanClose}" />
                    <Setter Property="dockctrl:LayoutAnchorableItem.CanHide" Value="{Binding Model.CanHide}" />
                </Style>
            </avalonDock:DockingManager.LayoutItemContainerStyle>
            <!--<avalonDock:DockingManager.AnchorablePaneControlStyle>
                <Style TargetType="{x:Type dockctrl:LayoutAnchorableItem}" >
                    <Setter Property="dockctrl:LayoutAnchorableItem.CanHide"  Value="False" />
                </Style>
            </avalonDock:DockingManager.AnchorablePaneControlStyle>-->
            <avalonDock:LayoutRoot>
                <avalonDock:LayoutRoot.LeftSide>
                    <avalonDock:LayoutAnchorSide>
                        <avalonDock:LayoutAnchorGroup >
                            <avalonDock:LayoutAnchorable x:Name="dockSnippets" 
                                CanClose="False" CanAutoHide="True" CanHide="False" Title="{x:Static or:strings.dock_snippets}" ContentId="Snippets" AutoHideWidth="250"
                                >
                                <ContentControl Content="{Binding Snippets}" Padding="0" Margin="0,0,0,0" />
                            </avalonDock:LayoutAnchorable>
                            <avalonDock:LayoutAnchorable x:Name="dockToolbox"  
                                CanClose="False" CanAutoHide="True" CanHide="False" Title="{x:Static or:strings.dock_toolbox}" ContentId="Toolbox" AutoHideWidth="250"
                                >
                                <ContentControl Content="{Binding Toolbox}" Padding="0" Margin="0,0,0,0" />
                            </avalonDock:LayoutAnchorable>

                        </avalonDock:LayoutAnchorGroup>
                    </avalonDock:LayoutAnchorSide>
                </avalonDock:LayoutRoot.LeftSide>

                <avalonDock:LayoutPanel>
                    <avalonDock:LayoutDocumentPane x:Name="dockpane">
                    </avalonDock:LayoutDocumentPane>
                </avalonDock:LayoutPanel>

                <avalonDock:LayoutRoot.BottomSide>
                    <avalonDock:LayoutAnchorSide>
                        <avalonDock:LayoutAnchorGroup >
                            <avalonDock:LayoutAnchorable CanClose="False" CanAutoHide="True" CanHide="False"  x:Name="Logging" Title="{x:Static or:strings.dock_logging}" ContentId="Logging" >
                                <TextBox Text="{Binding Tracing.TraceMessages}" TextWrapping="Wrap" IsReadOnly="False" Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Auto" />
                            </avalonDock:LayoutAnchorable>
                            <avalonDock:LayoutAnchorable CanClose="False" CanAutoHide="True" CanHide="False"  x:Name="Output" Title="{x:Static or:strings.dock_output}" ContentId="Output" >
                                <TextBox Text="{Binding Tracing.OutputMessages}" TextWrapping="Wrap" IsReadOnly="False" Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Auto" />
                            </avalonDock:LayoutAnchorable>

                            <avalonDock:LayoutAnchorable CanClose="False" CanAutoHide="True" CanHide="False"  x:Name="WorkflowInstances" Title="{x:Static or:strings.dock_workflowinstances}" 
                                                         ContentId="WorkflowInstances" >
                                <views:WorkflowInstances Workflow="{Binding CurrentWorkflow, diag:PresentationTraceSources.TraceLevel=High, 
                                    ElementName=TheMainWindow}"  ></views:WorkflowInstances>
                            </avalonDock:LayoutAnchorable>

                        </avalonDock:LayoutAnchorGroup>
                    </avalonDock:LayoutAnchorSide>
                </avalonDock:LayoutRoot.BottomSide>

                
                <avalonDock:LayoutRoot.RightSide>
                    <avalonDock:LayoutAnchorSide>
                        <avalonDock:LayoutAnchorGroup >
                            <avalonDock:LayoutAnchorable CanClose="False" CanAutoHide="True" CanHide="False" Title="{x:Static or:strings.dock_properties}" ContentId="Properties" AutoHideWidth="250"
                                                         >
                                <ContentControl Content="{Binding Path=LastDesigner.Properties}" Padding="0" Margin="0,0,0,0" />
                            </avalonDock:LayoutAnchorable>

                        </avalonDock:LayoutAnchorGroup>
                    </avalonDock:LayoutAnchorSide>
                </avalonDock:LayoutRoot.RightSide>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>


        <StatusBar HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="2" Height="25" Background="Gray">
            <StatusBar FocusManager.IsFocusScope="True" x:Name="StatusBar">
                <StatusBarItem x:Name="LabelStatusBar" Content="{x:Static or:strings.status_disconnected}" />
                <StatusBarItem VerticalAlignment="Top" HorizontalContentAlignment="Center">
                    <ItemsControl x:Name="lvDataBinding">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Margin="10,0,10,0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} : {1}">
                                            <Binding Path="Name" />
                                            <Binding Path="Status" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StatusBarItem>
            </StatusBar>
        </StatusBar>

    </Grid>


</Window>
